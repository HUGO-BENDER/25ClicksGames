cmd
Step 000: 
	reinstall node
	reinstall angular-cli
	
GIT	
Step 001: 
	Create repository

cmd 
Step 002:
Create project
	ir al directorio de nuestro codigo <C:\Users\hbender\Documents\Code>
    ng new <project> --style=scss --routing --skipTests
	ng new twentyfiveclicksgames --style=scss --routing --skipTests
	
VS Code.  	
Step 003:
	Open folder
	new terminal
	ng serve -o

Step 004:
	clean proyect
    Add this file StepsBySteps
	Optional [Config and plugin VS Code]

Step 005
	git remote add origin https://github.com/HUGO-BENDER/25ClicksGames.git
	git branch -M main
	git push -u origin main

Step 006:
	Start working in src/app/app.component.html   Main html
	create <div> loading or wait screen
	var isLoading
	css for screen src\styles.scss    is global css
	
Step 007: Create Mains Components
	Start Routes y structure of the site
	create ng g module components/appRouting
	or move app-routing.module.ts to components/app-routing
	ng g component components/app-toolbar		 change selector to 'app-toolbar'
	ng g component components/app-footer         change selector to 'app-footer'
	ng g module components/AppMaterial
    ng g module components/app-config
	
    ng g c components/pageHome
    ng g c components/pageAbout
    ng g c components/pageNotFound
    ng g c components/page-policy-privacy
    ng g c components/page-service-conditions
	
	ng g module shared-components/shared
    ng g c shared-components/app-logo       change selector: 'app-logo',
    ng g c shared-components/app-sidenav    change selector: 'app-sidenav',

	ng g interface components/app-model/metadata
	
	ng g module games/refactory --routing
    ng g c games/refactory      'RefactoryComponent' is listed in the declarations of the NgModule 'RefactoryModule'.
	
Step 008:	
	subscribe to Router events en app.component.ts
	this.subscribeToRouterEventsAndKeepCurrentUrl();
	whit currentURL make   checkIfShowHeaderAndFooter(): boolean {
		return !this.currentUrl.startsWith('/game');
	  }
	set app-toolbar / router-outlet / app-footer in app.component.html	
	
Step 009:	
	Material
	ng add @angular/material
	In app-material.module.ts Add  import { MatSidenavModule } from '@angular/material/sidenav';
	Create layout basic of game.  Sidenav gameDisplay gameControls
		<div class="game-controls">
            <div class="game-controls-top-bar">
                <div class="game-controls-left">
				<div class="game-controls-center">
				<div class="game-controls-rigth">
			<div class="game-controls-main">
			
			
			
			
			
			
Step 010
	(Create the board)
	add Pan Zoom
	ng g directive shared-components/panAndZoom
	ng g interface components/app-model/board
	ng generate service games/refactory/services/GameService
	ng generate c games/refactory/components/tileGame	
	ng generate c games/refactory/components/backgroundSpace			
				
	Create effect parallax for the components/backgroundSpace	
	Create effect onOver for components/tileGame	
				
				
Step 011 
	drag and drop
	functions in refactory.component.ts	
	ng generate service games/refactory/services/DragService			
				

				
				
				
				
Angular Language Service
				
				
https://graphicriver.net/item/space-shooter-sprites-vol2/17298810				
https://freesvg.org/	

http://localhost:4200/games/refactory/sfas/asfdsa